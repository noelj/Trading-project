//@version=6
strategy("Elite Signals - London Breakout R:R 1:3", overlay=false, max_lines_count=500, max_labels_count=500)

// === INPUTS === //
sensitivity   = input.float(1.0, title = 'Signal Sensitivity', minval = 0.1, step = 0.1)
riskMode      = input.string('Normal', title = 'Risk Mode', options = ['Conservative', 'Normal', 'Aggressive'])
showDashboard = input.bool(true, title = 'Show Dashboard')
showZones     = input.bool(true, title = 'Show Order Blocks')
showSignals   = input.bool(true, title = 'Show Buy/Sell Labels')
sessionFilter = input.string('All', title = 'Session Filter', options = ['All', 'London', 'New York', 'Asia'])
useEMA        = input.bool(true, "Use EMA Confirmation")
breakOffset   = input.float(5, "Breakout Offset (points)")

// === EMA Trend === //
emaFast = ta.ema(close, 20)
emaSlow = ta.ema(close, 50)
trendUp = useEMA ? emaFast > emaSlow : true
trendDn = useEMA ? emaFast < emaSlow : true

plot(emaFast, color=color.blue)
plot(emaSlow, color=color.red)

// === Session Logic === //
currHour = hour(time)  // get current hour of the bar
isLondon  = (currHour >= 8  and currHour < 16)
isNewYork = (currHour >= 15 and currHour < 23)
isAsia    = (currHour >= 1  and currHour < 9)

// Compute sessionOK in one line to avoid syntax error
sessionOK = (sessionFilter == 'All') or ((sessionFilter == 'London') and isLondon) or ((sessionFilter == 'New York') and isNewYork) or ((sessionFilter == 'Asia') and isAsia)

// === Asian Session High/Low === //
var float asiaHigh = na
var float asiaLow  = na

if isAsia
    if na(asiaHigh)
        asiaHigh := high
    else
        asiaHigh := math.max(asiaHigh, high)
    
    if na(asiaLow)
        asiaLow := low
    else
        asiaLow := math.min(asiaLow, low)

// Reset for new day
if dayofmonth != dayofmonth[1]
    asiaHigh := na
    asiaLow  := na

// === Breakout Entries === //
longEntry  = isLondon and sessionOK and trendUp and close > asiaHigh + breakOffset * syminfo.mintick
shortEntry = isLondon and sessionOK and trendDn and close < asiaLow - breakOffset * syminfo.mintick

// === Fixed R:R 1:3 === //
longSL  = asiaLow
shortSL = asiaHigh
longRisk  = close - longSL
shortRisk = shortSL - close
longTP  = close + longRisk * 3
shortTP = close - shortRisk * 3

// === Place Trades === //
if longEntry
    strategy.entry("Long", strategy.long)
    strategy.exit("Long Exit", "Long", stop=longSL, limit=longTP)

if shortEntry
    strategy.entry("Short", strategy.short)
    strategy.exit("Short Exit", "Short", stop=shortSL, limit=shortTP)

// === Plot Buy/Sell Signals === //
plotshape(showSignals and longEntry, title="Buy Signal", location=location.belowbar, color=color.green, style=shape.labelup, text="Buy", textcolor=color.white)
plotshape(showSignals and shortEntry, title="Sell Signal", location=location.abovebar, color=color.red, style=shape.labeldown, text="Sell", textcolor=color.white)

// === Order Block Zones === //
var float lastHigh = na
var float lastLow  = na
lastHigh := ta.highest(high, 20)
lastLow  := ta.lowest(low, 20)

if showZones
    box.new(bar_index - 20, lastHigh, bar_index, lastHigh + 0.001, border_color=color.red, bgcolor=color.new(color.red, 90))
    box.new(bar_index - 20, lastLow - 0.001, bar_index, lastLow, border_color=color.green, bgcolor=color.new(color.green, 90))

// === Volatility === //
atr = ta.atr(14)
volatilityLevel = atr > ta.sma(atr, 14) ? 'High' : 'Low'

// === Dashboard === //
var label dashboard = na
if showDashboard
    if not na(dashboard)
        label.delete(dashboard)
    txt = 'Elite Signal Dashboard\n' +
          'Risk: ' + riskMode + '\n' +
          'Trend: ' + (trendUp ? 'Uptrend' : trendDn ? 'Downtrend' : 'Neutral') + '\n' +
          'Volatility: ' + volatilityLevel + '\n' +
          'Session: ' + (isLondon ? 'London' : isNewYork ? 'New York' : isAsia ? 'Asia' : 'Unknown')
    // Fixed position in the chart pane like a chat box
    dashboard := label.new(
         x=bar_index, 
         y=0,                // y value is ignored for yloc.viewport
         text=txt, 
         style=label.style_label_left, 
         textcolor=color.white, 
         size=size.small, 
         yloc=yloc.viewport // keeps it fixed in the pane
    )
